{
	"main": {
		"prefix": "main",
		"body": [
			"public static void main(String[] args) {",
			"\t$1",
			"}"
		],
		"description": "Public static main method"
	},
	"sysout": {
		"prefix": "sysout",
		"body": [
			"System.out.println($1);"
		],
		"description": "Print to standard out"
	},
	"syserr": {
		"prefix": "syserr",
		"body": [
			"System.err.println($1);"
		],
		"description": "Print to standard err"
	},
	"fori": {
		"prefix": "fori",
		"body": [
			"for (${1:int} ${2:i} = ${3:0}; $2 < ${4:max}; $2++) {",
			"\t$5",
			"}"
		],
		"description": "Indexed for loop"
	},
	"foreach": {
		"prefix": "foreach",
		"body": [
			"for (${1:type} ${2:var} : ${3:iterable}) {",
			"\t$4",
			"}"
		],
		"description": "Enhanced for loop"
	},
	"Public constructor": {
		"prefix": "ctor",
		"body": [
			"public ${1:${TM_FILENAME_BASE}}($2) {",
			"\t${0:super();}",
			"}"
		],
		"description": "Public constructor"
	},
	"Class Definition": {
		"prefix": "class",
		"body": [
			"/**",
			" * ${1}",
			" */",
			"public class ${1:${TM_FILENAME_BASE}} {",
			"",
			"\t$0",
			"}"
		],
		"description": "Class Definition"
	},
	"Interface Definition": {
		"prefix": "interface",
		"body": [
			"/**",
			" * ${1}",
			" */",
			"public interface ${1:${TM_FILENAME_BASE}} {",
			"\t$0",
			"}"
		],
		"description": "Interface Definition"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if (${1:condition}) {",
			"\t$0",
			"}"
		],
		"description": "if statement"
	},
	"ifelse": {
		"prefix": "ifelse",
		"body": [
			"if (${1:condition}) {",
			"\t$2",
			"} else {",
			"\t$3",
			"}"
		],
		"description": "if/else statement"
	},
	"ifnull": {
		"prefix": "ifnull",
		"body": [
			"if (${1:condition} == null) {",
			"\t$2",
			"}"
		],
		"description": "if statement checking for null"
	},
	"ifnotnull": {
		"prefix": "ifnotnull",
		"body": [
			"if (${1:condition} != null) {",
			"\t$2",
			"}"
		],
		"description": "if statement checking for not null"
	},
	"trycatch": {
		"prefix": "try_catch",
		"body": [
			"try {",
			"\t$1",
			"} catch (${2:Exception} ${3:e}) {",
			"\t$4//${5:TODO}: handle exception",
			"}"
		],
		"description": "try/catch block"
	},
	"private_method": {
		"prefix": "private_method",
		"body": [
			"private ${1:void} ${2:name}($3) {",
			"\t$4",
			"}"
		],
		"description": "private method"
	},
	"Public method": {
		"prefix": "public_method",
		"body": [
			"public ${1:void} ${2:name}(${3}) {",
			"\t$4",
			"}"
		],
		"description": "public method"
	},
	"Private static method": {
		"prefix": "private_static_method",
		"body": [
			"private static ${1:Type} ${2:name}(${3}) {",
			"\t$4",
			"}"
		],
		"description": "private static method"
	},
	"Public static method": {
		"prefix": "public_static_method",
		"body": [
			"public static ${1:void} ${2:name}(${3}) {",
			"\t$4",
			"}"
		],
		"description": "public static method"
	},
	"Protected Method": {
		"prefix": "protected_method",
		"body": [
			"protected ${1:void} ${2:name}(${3}) {",
			"\t$4",
			"}"
		],
		"description": "Protected method"
	},
	"Switch Statement": {
		"prefix": "switch",
		"body": [
			"switch (${1:key}) {",
			"\tcase ${2:value}:",
			"\t\t$0",
			"\t\tbreak;",
			"",
			"\tdefault:",
			"\t\tbreak;",
			"}"
		],
		"description": "Switch Statement"
	},
	"While Statement": {
		"prefix": "while",
		"body": [
			"while (${1:condition}) {",
			"\t$0",
			"}"
		],
		"description": "While Statement"
	},
	"Do-While Statement": {
		"prefix": "dowhile",
		"body": [
			"do {",
			"\t$0",
			"} while (${1:condition});"
		],
		"description": "Do-While Statement"
	},
	"newObject": {
		"prefix": "new",
		"body": [
			"${1:Object} ${2:foo} = new ${1:Object}();"
		],
		"description": "Create new Object"
	}
}